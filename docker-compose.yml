services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: backend
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mysql-db
      - ml-api
    env_file:
      - .env
    networks:
      - internal

  ml-api:
    build:
      context: ./ml-api
      dockerfile: Dockerfile
    container_name: ml-api
    ports:
      - "5001:5000"
    volumes:
      - ./ml-api:/app
    networks:
      - internal

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: K22.Kb16.Nk28.Ny27
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/db:/docker-entrypoint-initdb.d
    networks:
      - internal

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql-db
      MYSQL_ROOT_PASSWORD: K22.Kb16.Nk28.Ny27
    ports:
      - "8081:80"
    networks:
      - internal

  frontend:
    image: php:8.2-apache
    container_name: frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/var/www/html
      - ./backend:/var/www/backend
    networks:
      - internal

volumes:
  db_data:

networks:
  internal:
    driver: bridge

